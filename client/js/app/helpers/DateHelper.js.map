{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","texto","test","Date","split","reverse","map","item","indice","data","getDay","getMonth","getFullYear"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;;;kDAEoBC,K,EAAO;AACxB,4BAAG,CAAC,sBAAsBC,IAAtB,CAA2BD,KAA3B,CAAJ,EAAuC;AACnC,kCAAM,IAAID,KAAJ,CAAU,qCAAV,CAAN;AACH;;AAED,kEAAWG,IAAX,mCAAmBF,MACdG,KADc,CACR,GADQ,EAEdC,OAFc,GAGdC,GAHc,CAGV,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAOC,SAAS,CAAlC;AAAA,yBAHU,CAAnB;AAKH;;;kDAEoBC,I,EAAM;AACvB,+BAAUA,KAAKC,MAAL,EAAV,UAA2BD,KAAKE,QAAL,KAAkB,CAA7C,UAAkDF,KAAKG,WAAL,EAAlD;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor() {\r\n        throw new Error('Não é possível instanciar DateHelper');\r\n    }\r\n\r\n    static textoParaData(texto) {\r\n        if(!/\\d{2}\\/\\d{2}\\/\\d{4}/.test(texto)) {\r\n            throw new Error('Formato de data deve ser dd/mm/aaaa');\r\n        }\r\n\r\n        return new Date(...texto\r\n            .split('/')\r\n            .reverse()\r\n            .map((item, indice) => item - indice % 2)\r\n        );\r\n    }\r\n\r\n    static dataParaTexto(data) {\r\n        return `${data.getDay()}/${data.getMonth() + 1}/${data.getFullYear()}`;\r\n    }\r\n}"]}