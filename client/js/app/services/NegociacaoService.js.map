{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["ConnectionFactory","HttpService","NegociacaoDao","Negociacao","NegociacaoService","_http","negociacao","getConnection","then","connection","dao","adiciona","catch","console","log","erro","Error","listaTodos","apagaTodos","_mensagem","texto","listaAtual","obterNegociacoes","negociacoes","filter","some","isEquals","negociacaoExistente","Promise","resolve","reject","get","dados","map","dado","Date","data","quantidade","valor","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","retorno","reduce","arrayAchatado","array","concat","forEach","push"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {ConnectionFactory} from './ConnectionFactory';\r\nimport {HttpService} from './HttpService';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação salva com sucesso!')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível adicionar a negociação\");\r\n            });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações');\r\n            });\r\n    }\r\n\r\n    apagaTodas() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negociacao => \r\n                    !listaAtual.some(negociacaoExistente => negociacao.isEquals(negociacaoExistente))\r\n                )\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível importas as negociaçoes\");\r\n            });\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('negociacoes/semana')\r\n                .then(dados => resolve(dados.map((dado) => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))))\r\n                .catch(erro => reject('Erro ao buscar negociações: ' + erro));\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('negociacoes/anterior')\r\n                .then(dados => resolve(dados.map((dado) => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))))\r\n                .catch(erro => reject('Erro ao buscar negociações da semana anterior: ' + erro));\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        return new Promise((resolve, reject) => {\r\n            this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(dados => resolve(dados.map((dado) => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor))))\r\n                .catch(erro => reject('Erro ao buscar negociações da semana retrasada: ' + erro));\r\n        });\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([this.obterNegociacoesDaSemana(),\r\n                         this.obterNegociacoesDaSemanaAnterior(),\r\n                         this.obterNegociacoesDaSemanaRetrasada()])\r\n                .then(negociacoes => {\r\n                    let retorno = [];\r\n\r\n                    negociacoes\r\n                        .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n                        .forEach(negociacao => retorno.push(negociacao));\r\n\r\n                    resolve(retorno);\r\n                })\r\n                .catch(erro => reject(erro));\r\n        });\r\n    }\r\n}"]}